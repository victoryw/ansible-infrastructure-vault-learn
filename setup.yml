---
# master playbook
- name: Deploy infrastructure
  hosts: all
  tasks:
    - name: Ensure docker-compose directory exists
      file:
        path: "{{infrastructureDockerComposeFolder}}"
        state: directory

    - name: Ensure docker-compose file is up to date
      template:
        src: infrastructure-docker-compose.j2
        dest: "{{infrastructureDockerComposeFolder}}/docker-compose.yml"

    - name: Ensure vault volumes exists
      file:
        path: "{{vaultConfigVolume}}"
        state: directory
        recurse: yes

    - name: Ensure vault.json file is up to date
      template:
        src: vault.json.j2
        dest: "{{vaultConfigVolume}}/vault.json"

    - name: Docker-compose up to build infrastructure
      docker_service:
        project_name: infrastructure
        project_src: "{{infrastructureDockerComposeFolder}}"

    - name: Wait for db restart
      action: command docker exec {{dbname}} pg_isready
      register: db_logs
      until: db_logs.stdout.find("/var/run/postgresql:5432 - accepting connections") != -1
      retries: 5
      delay: 10

    - name: pip install psycopg2
      pip:
        name: psycopg2
        state: present
      become: True

    - name: crate vault user
      postgresql_user:
        name: "{{dbInstanceOwner}}"
        password: "{{vaultUserPassword}}"
        port: "{{dbPort}}"
        login_host: "{{ansible_default_ipv4.address}}"
        login_password: "{{superUserPassword}}"

    - name: create vaultdb
      postgresql_db:
        name: "{{dbInstanceName}}"
        owner: "{{dbInstanceOwner}}"
        port: "{{dbPort}}"
        login_host: "{{ansible_default_ipv4.address}}"
        login_password: "{{superUserPassword}}"

    - name: GRANT ALL PRIVILEGES
      postgresql_privs:
        db: "{{dbInstanceName}}"
        privs: ALL
        type: database
        role: "{{dbInstanceOwner}}"
        port: "{{dbPort}}"
        login_host: "{{ansible_default_ipv4.address}}"
        login_password: "{{superUserPassword}}"


    - name: Vault init
      script: vault-init.sh {{vaultname}} {{vaultServer}}
